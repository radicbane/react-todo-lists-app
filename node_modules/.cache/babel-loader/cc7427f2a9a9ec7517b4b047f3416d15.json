{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nfunction useLocalStorage(keys, initialValue) {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(keys);\n      return item ? JSON.parse(item) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(keys, JSON.stringify(valueToStore));\n    } catch {\n      return value;\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\n_s(useLocalStorage, \"SS1oJM1eD/EKycBaUJv7UcIj000=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/Users/radicbane/Documents/Projects/react-todo-lists-app/src/hooks/useLocalStorage.js"],"names":["useState","useLocalStorage","keys","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","setValue","value","valueToStore","Function","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,YAA/B,EAA6C;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,IAA5B,CAAb;AACA,aAAOI,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBH,YAAjC;AACD,KAHD,CAGE,MAAM;AACN,aAAOA,YAAP;AACD;AACF,GAP6C,CAA9C;;AASA,QAAMS,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAI;AACF,YAAMC,YAAY,GAChBD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACT,WAAD,CAAjC,GAAiDS,KADnD;AAEAR,MAAAA,cAAc,CAACS,YAAD,CAAd;AACAP,MAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4Bd,IAA5B,EAAkCQ,IAAI,CAACO,SAAL,CAAeH,YAAf,CAAlC;AACD,KALD,CAKE,MAAM;AACN,aAAOD,KAAP;AACD;AACF,GATD;;AAWA,SAAO,CAACT,WAAD,EAAcQ,QAAd,CAAP;AACD;;GAtBQX,e;;AAwBT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react'\n\nfunction useLocalStorage(keys, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(keys)\n      return item ? JSON.parse(item) : initialValue\n    } catch {\n      return initialValue\n    }\n  })\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n      setStoredValue(valueToStore)\n      window.localStorage.setItem(keys, JSON.stringify(valueToStore))\n    } catch {\n      return value\n    }\n  }\n\n  return [storedValue, setValue]\n}\n\nexport default useLocalStorage\n"]},"metadata":{},"sourceType":"module"}