{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nfunction useLocalStorage(todos, initialValue) {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(todos);\n      return item ? JSON.parse(item) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(todos, JSON.stringify(valueToStore));\n    } catch {}\n  };\n\n  return [storedValue, setValue];\n}\n\n_s(useLocalStorage, \"zuomKy/+/dzPeNhZ/42ZfE6w1ko=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/Users/radicbane/Documents/Projects/react-todo-lists-app/src/hooks/useLocalStorage.js"],"names":["useState","useLocalStorage","todos","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","setValue","value","valueToStore","Function","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,YAAhC,EAA8C;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,KAA5B,CAAb;AAEA,aAAOI,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBH,YAAjC;AACD,KAJD,CAIE,MAAM;AACN,aAAOA,YAAP;AACD;AACF,GAR6C,CAA9C;;AAUA,QAAMS,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAI;AACF,YAAMC,YAAY,GAChBD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACT,WAAD,CAAjC,GAAiDS,KADnD;AAGAR,MAAAA,cAAc,CAACS,YAAD,CAAd;AAEAP,MAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4Bd,KAA5B,EAAmCQ,IAAI,CAACO,SAAL,CAAeH,YAAf,CAAnC;AACD,KAPD,CAOE,MAAM,CAAE;AACX,GATD;;AAWA,SAAO,CAACV,WAAD,EAAcQ,QAAd,CAAP;AACD;;GAvBQX,e;;AAyBT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react'\n\nfunction useLocalStorage(todos, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(todos)\n\n      return item ? JSON.parse(item) : initialValue\n    } catch {\n      return initialValue\n    }\n  })\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n\n      setStoredValue(valueToStore)\n\n      window.localStorage.setItem(todos, JSON.stringify(valueToStore))\n    } catch {}\n  }\n\n  return [storedValue, setValue]\n}\n\nexport default useLocalStorage\n"]},"metadata":{},"sourceType":"module"}