{"ast":null,"code":"var _jsxFileName = \"/Users/radicbane/Documents/Projects/react-todo-lists-app/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { BiEdit } from 'react-icons/bi';\nimport { AiOutlinePlusCircle } from 'react-icons/ai';\nimport { MdOutlineDoneAll } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nimport Todostyles from './Todo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    todos,\n    pendingTodo,\n    deleteTodo,\n    updateTodo\n  } = _ref;\n  const [update, setUpdate] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(update.id, value);\n    setUpdate({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (update.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: update,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Todostyles.todo,\n    children: [todo.text, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Todostyles.icons,\n      children: [/*#__PURE__*/_jsxDEV(MdOutlineDoneAll, {\n        onClick: () => pendingTodo(index),\n        className: Todostyles.iconDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => deleteTodo(todo.id),\n        className: Todostyles.deleteIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BiEdit, {\n        onClick: () => setUpdate({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: Todostyles.editIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/items/${todo.id}`,\n        children: /*#__PURE__*/_jsxDEV(AiOutlinePlusCircle, {\n          className: Todostyles.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Todo, \"/K6UzUMnsA8cu1z4txLj0bM+ZBE=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/radicbane/Documents/Projects/react-todo-lists-app/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","BiEdit","AiOutlinePlusCircle","MdOutlineDoneAll","Link","Todostyles","Todo","todos","pendingTodo","deleteTodo","updateTodo","update","setUpdate","id","value","submitUpdate","map","todo","index","text","icons","iconDone","deleteIcon","editIcon","icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,SAASC,IAAT,OAA8D;AAAA;;AAAA,MAAhD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA;AAAlC,GAAgD;AAC5D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC;AACnCe,IAAAA,EAAE,EAAE,IAD+B;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAApC;;AAKA,QAAMC,YAAY,GAAID,KAAD,IAAW;AAC9BJ,IAAAA,UAAU,CAACC,MAAM,CAACE,EAAR,EAAYC,KAAZ,CAAV;AACAF,IAAAA,SAAS,CAAC;AACRC,MAAAA,EAAE,EAAE,IADI;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAD,CAAT;AAID,GAND;;AAQA,MAAIH,MAAM,CAACE,EAAX,EAAe;AACb,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,MAAhB;AAAwB,MAAA,QAAQ,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACf;AAAK,IAAA,SAAS,EAAEb,UAAU,CAACY,IAA3B;AAAA,eACGA,IAAI,CAACE,IADR,eAEE;AAAK,MAAA,SAAS,EAAEd,UAAU,CAACe,KAA3B;AAAA,8BACE,QAAC,gBAAD;AACE,QAAA,OAAO,EAAE,MAAMZ,WAAW,CAACU,KAAD,CAD5B;AAEE,QAAA,SAAS,EAAEb,UAAU,CAACgB;AAFxB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE,MAAMZ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CAD3B;AAEE,QAAA,SAAS,EAAER,UAAU,CAACiB;AAFxB;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMV,SAAS,CAAC;AAAEC,UAAAA,EAAE,EAAEI,IAAI,CAACJ,EAAX;AAAeC,UAAAA,KAAK,EAAEG,IAAI,CAACE;AAA3B,SAAD,CAD1B;AAEE,QAAA,SAAS,EAAEd,UAAU,CAACkB;AAFxB;AAAA;AAAA;AAAA;AAAA,cATF,eAaE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASN,IAAI,CAACJ,EAAG,EAA5B;AAAA,+BACE,QAAC,mBAAD;AAAqB,UAAA,SAAS,EAAER,UAAU,CAACmB;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF,SAAoCP,IAAI,CAACJ,EAAzC;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAsBD;;GAxCQP,I;;KAAAA,I;AA0CT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport TodoForm from './TodoForm'\nimport { RiCloseCircleLine } from 'react-icons/ri'\nimport { BiEdit } from 'react-icons/bi'\nimport { AiOutlinePlusCircle } from 'react-icons/ai'\nimport { MdOutlineDoneAll } from 'react-icons/md'\nimport { Link } from 'react-router-dom'\nimport Todostyles from './Todo.module.css'\n\nfunction Todo({ todos, pendingTodo, deleteTodo, updateTodo }) {\n  const [update, setUpdate] = useState({\n    id: null,\n    value: '',\n  })\n\n  const submitUpdate = (value) => {\n    updateTodo(update.id, value)\n    setUpdate({\n      id: null,\n      value: '',\n    })\n  }\n\n  if (update.id) {\n    return <TodoForm edit={update} onSubmit={submitUpdate} />\n  }\n\n  return todos.map((todo, index) => (\n    <div className={Todostyles.todo}>\n      {todo.text}\n      <div className={Todostyles.icons}>\n        <MdOutlineDoneAll\n          onClick={() => pendingTodo(index)}\n          className={Todostyles.iconDone}\n        />\n        <RiCloseCircleLine\n          onClick={() => deleteTodo(todo.id)}\n          className={Todostyles.deleteIcon}\n        />\n        <BiEdit\n          onClick={() => setUpdate({ id: todo.id, value: todo.text })}\n          className={Todostyles.editIcon}\n        />\n        <Link to={`/items/${todo.id}`} key={todo.id}>\n          <AiOutlinePlusCircle className={Todostyles.icon} />\n        </Link>\n      </div>\n    </div>\n  ))\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}