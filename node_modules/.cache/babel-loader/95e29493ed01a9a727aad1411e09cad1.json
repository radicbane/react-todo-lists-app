{"ast":null,"code":"var _jsxFileName = \"/Users/radicbane/Documents/Projects/react-todo-lists-app/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useLocalStorage('todos', []);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the Plan today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      deleteTodo: deleteTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"E8gibIVKgvaJTbx33/s1w93NiC4=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/radicbane/Documents/Projects/react-todo-lists-app/src/components/TodoList.js"],"names":["React","TodoForm","Todo","useLocalStorage","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","deleteTodo","filter","completeTodo","updatedTodos","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,eAAe,CAAC,OAAD,EAAU,EAAV,CAAzC;;AAEA,QAAMI,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AACD,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,GAND;;AAQA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDH,IAAAA,QAAQ,CAAES,IAAD,IACPA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAApD,CADM,CAAR;AAGD,GARD;;AAUA,QAAME,UAAU,GAAID,EAAD,IAAQ;AACzBZ,IAAAA,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAcZ,IAAD,IAAUA,IAAI,CAACU,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAIH,EAAD,IAAQ;AAC3B,QAAII,YAAY,GAAGjB,KAAK,CAACW,GAAN,CAAWR,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACU,EAAL,KAAYA,EAAhB,EAAoB;AAClBV,QAAAA,IAAI,CAACe,UAAL,GAAkB,CAACf,IAAI,CAACe,UAAxB;AACD;;AACD,aAAOf,IAAP;AACD,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACgB,YAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEf;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,YAAY,EAAEgB,YAFhB;AAGE,MAAA,UAAU,EAAEF,UAHd;AAIE,MAAA,UAAU,EAAEP;AAJd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA/CQR,Q;UACmBD,e;;;KADnBC,Q;AAiDT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction TodoList() {\n  const [todos, setTodos] = useLocalStorage('todos', [])\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return\n    }\n    const newTodos = [todo, ...todos]\n    setTodos(newTodos)\n  }\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return\n    }\n\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    )\n  }\n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id))\n  }\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete\n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  }\n\n  return (\n    <div>\n      <h1>What's the Plan today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        deleteTodo={deleteTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}