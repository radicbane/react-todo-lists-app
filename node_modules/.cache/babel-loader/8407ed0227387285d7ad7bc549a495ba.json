{"ast":null,"code":"var _jsxFileName = \"/Users/radicbane/Documents/Projects/react-todo-lists-app/src/screens/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [items, setItems] = useLocalStorage('items', []);\n\n  const addItem = item => {\n    if (!item.text || /^\\s*$/.test(item.text)) {\n      return;\n    }\n\n    const newItems = [item, ...items];\n    setItems(newItems);\n  };\n\n  const updateItem = (itemId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setItems(prev => prev.map(item => item.id === itemId ? newValue : item));\n  };\n\n  const deleteItem = id => {\n    setItems(items.filter(item => item.id !== id));\n  };\n\n  const completeItem = id => {\n    let updateditems = items.map(item => {\n      if (item.id === id) {\n        item.isComplete = !item.isComplete;\n      }\n\n      return item;\n    });\n    setItems(updateditems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Todo, {\n      items: items,\n      deleteItem: deleteItem,\n      updateItem: updateItem,\n      completeItem: completeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"EbwZ5jHCeIM4BSTJaQfZTxxSGmo=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/radicbane/Documents/Projects/react-todo-lists-app/src/screens/TodoList.js"],"names":["React","TodoForm","Todo","useLocalStorage","TodoList","items","setItems","addItem","item","text","test","newItems","updateItem","itemId","newValue","prev","map","id","deleteItem","filter","completeItem","updateditems","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,eAAe,CAAC,OAAD,EAAU,EAAV,CAAzC;;AAEA,QAAMI,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AACD,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,GAND;;AAQA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDH,IAAAA,QAAQ,CAAES,IAAD,IACPA,IAAI,CAACC,GAAL,CAAUR,IAAD,IAAWA,IAAI,CAACS,EAAL,KAAYJ,MAAZ,GAAqBC,QAArB,GAAgCN,IAApD,CADM,CAAR;AAGD,GARD;;AAUA,QAAMU,UAAU,GAAID,EAAD,IAAQ;AACzBX,IAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcX,IAAD,IAAUA,IAAI,CAACS,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAIH,EAAD,IAAQ;AAC3B,QAAII,YAAY,GAAGhB,KAAK,CAACW,GAAN,CAAWR,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACS,EAAL,KAAYA,EAAhB,EAAoB;AAClBT,QAAAA,IAAI,CAACc,UAAL,GAAkB,CAACd,IAAI,CAACc,UAAxB;AACD;;AACD,aAAOd,IAAP;AACD,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACe,YAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEhB,KADT;AAEE,MAAA,UAAU,EAAEa,UAFd;AAGE,MAAA,UAAU,EAAEN,UAHd;AAIE,MAAA,YAAY,EAAEQ;AAJhB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEb;AAApB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9CQH,Q;UACmBD,e;;;KADnBC,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction TodoList() {\n  const [items, setItems] = useLocalStorage('items', [])\n\n  const addItem = (item) => {\n    if (!item.text || /^\\s*$/.test(item.text)) {\n      return\n    }\n    const newItems = [item, ...items]\n    setItems(newItems)\n  }\n\n  const updateItem = (itemId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return\n    }\n\n    setItems((prev) =>\n      prev.map((item) => (item.id === itemId ? newValue : item))\n    )\n  }\n\n  const deleteItem = (id) => {\n    setItems(items.filter((item) => item.id !== id))\n  }\n\n  const completeItem = (id) => {\n    let updateditems = items.map((item) => {\n      if (item.id === id) {\n        item.isComplete = !item.isComplete\n      }\n      return item\n    })\n    setItems(updateditems)\n  }\n\n  return (\n    <div>\n      <Todo\n        items={items}\n        deleteItem={deleteItem}\n        updateItem={updateItem}\n        completeItem={completeItem}\n      />\n      <TodoForm onSubmit={addItem} />\n    </div>\n  )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}