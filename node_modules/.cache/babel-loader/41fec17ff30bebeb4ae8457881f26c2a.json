{"ast":null,"code":"var _jsxFileName = \"/Users/radicbane/Documents/Projects/react-todo-lists-app/src/screens/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport TodoListstyles from './TodoList.module.css';\nimport { useParams } from 'react-router-dom';\nimport { getTask } from '../getTasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [items, setItems] = useLocalStorage('items', []);\n  const params = useParams();\n  const todoItem = getTask(params.id);\n  console.log(params.text);\n\n  const addItem = item => {\n    if (!item.text || /^\\s*$/.test(item.text)) {\n      return;\n    }\n\n    const newItems = [item, ...items];\n    setItems(newItems);\n  };\n\n  const updateItem = (itemId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setItems(prev => prev.map(item => item.id === itemId ? newValue : item));\n  };\n\n  const deleteItem = id => {\n    setItems(items.filter(item => item.id !== id));\n  };\n\n  const completeItem = id => {\n    let updateditems = items.map(item => {\n      if (item.id === id) {\n        item.isComplete = !item.isComplete;\n      }\n\n      return item;\n    });\n    setItems(updateditems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: TodoListstyles.container,\n    children: [todoItem === null || todoItem === void 0 ? void 0 : todoItem.id, /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      items: items,\n      deleteItem: deleteItem,\n      updateItem: updateItem,\n      completeItem: completeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"1p4cg4iYOGtOIULeKiy5Btz66Gs=\", false, function () {\n  return [useLocalStorage, useParams];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/radicbane/Documents/Projects/react-todo-lists-app/src/screens/TodoList.js"],"names":["React","TodoForm","Todo","useLocalStorage","TodoListstyles","useParams","getTask","TodoList","items","setItems","params","todoItem","id","console","log","text","addItem","item","test","newItems","updateItem","itemId","newValue","prev","map","deleteItem","filter","completeItem","updateditems","isComplete","container"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,eAAe,CAAC,OAAD,EAAU,EAAV,CAAzC;AAEA,QAAMO,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,QAAQ,GAAGL,OAAO,CAACI,MAAM,CAACE,EAAR,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,IAAnB;;AAEA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAI,CAACA,IAAI,CAACF,IAAN,IAAc,QAAQG,IAAR,CAAaD,IAAI,CAACF,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AACD,UAAMI,QAAQ,GAAG,CAACF,IAAD,EAAO,GAAGT,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACD,GAND;;AAQA,QAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACP,IAAV,IAAkB,QAAQG,IAAR,CAAaI,QAAQ,CAACP,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDN,IAAAA,QAAQ,CAAEc,IAAD,IACPA,IAAI,CAACC,GAAL,CAAUP,IAAD,IAAWA,IAAI,CAACL,EAAL,KAAYS,MAAZ,GAAqBC,QAArB,GAAgCL,IAApD,CADM,CAAR;AAGD,GARD;;AAUA,QAAMQ,UAAU,GAAIb,EAAD,IAAQ;AACzBH,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcT,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMe,YAAY,GAAIf,EAAD,IAAQ;AAC3B,QAAIgB,YAAY,GAAGpB,KAAK,CAACgB,GAAN,CAAWP,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAClBK,QAAAA,IAAI,CAACY,UAAL,GAAkB,CAACZ,IAAI,CAACY,UAAxB;AACD;;AACD,aAAOZ,IAAP;AACD,KALkB,CAAnB;AAMAR,IAAAA,QAAQ,CAACmB,YAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAExB,cAAc,CAAC0B,SAA/B;AAAA,eACGnB,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEC,EADb,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AACE,MAAA,KAAK,EAAER,KADT;AAEE,MAAA,UAAU,EAAEiB,UAFd;AAGE,MAAA,UAAU,EAAEL,UAHd;AAIE,MAAA,YAAY,EAAEO;AAJhB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnDQpB,Q;UACmBJ,e,EAEXE,S;;;KAHRE,Q;AAqDT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport TodoListstyles from './TodoList.module.css'\nimport { useParams } from 'react-router-dom'\nimport { getTask } from '../getTasks'\n\nfunction TodoList() {\n  const [items, setItems] = useLocalStorage('items', [])\n\n  const params = useParams()\n  const todoItem = getTask(params.id)\n  console.log(params.text)\n\n  const addItem = (item) => {\n    if (!item.text || /^\\s*$/.test(item.text)) {\n      return\n    }\n    const newItems = [item, ...items]\n    setItems(newItems)\n  }\n\n  const updateItem = (itemId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return\n    }\n\n    setItems((prev) =>\n      prev.map((item) => (item.id === itemId ? newValue : item))\n    )\n  }\n\n  const deleteItem = (id) => {\n    setItems(items.filter((item) => item.id !== id))\n  }\n\n  const completeItem = (id) => {\n    let updateditems = items.map((item) => {\n      if (item.id === id) {\n        item.isComplete = !item.isComplete\n      }\n      return item\n    })\n    setItems(updateditems)\n  }\n\n  return (\n    <div className={TodoListstyles.container}>\n      {todoItem?.id}\n      <TodoForm onSubmit={addItem} />\n      <Todo\n        items={items}\n        deleteItem={deleteItem}\n        updateItem={updateItem}\n        completeItem={completeItem}\n      />\n    </div>\n  )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}